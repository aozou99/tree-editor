export const en = {
    common: {
        save: 'Save',
        cancel: 'Cancel',
        edit: 'Edit',
        delete: 'Delete',
        close: 'Close',
        add: 'Add',
        search: 'Search',
        reset: 'Reset',
        import: 'Import',
        export: 'Export',
        lastSaved: 'Last saved',
        set: 'Set',
        clear: 'Clear',
        preview: 'Preview',
        error: 'Error',
        success: 'Success',
    },
    header: {
        file: 'File',
        settings: 'Settings',
        addRootNode: 'Add Root Node',
        nodeTypeManagement: 'Node Type Management',
        sampleSelection: 'Sample Selection',
    },
    search: {
        placeholder: 'Search nodes... (e.g. type:employee department:sales)',
        help: {
            title: 'Search Help',
            basicSearch: {
                title: 'Basic Search',
                description: 'Search node names, thumbnails, and field values.',
                example: 'Example: Suzuki',
            },
            typeSearch: {
                title: 'Node Type Search',
                description: 'Search for specific node types.',
                example: 'Example: type:employee',
            },
            fieldSearch: {
                title: 'Field Search',
                description: 'Search for specific field values.',
                example: 'Example: department:sales',
            },
            combinedSearch: {
                title: 'Combined Search',
                description: 'Combine multiple search conditions.',
                example: 'Example: type:employee department:sales Suzuki',
            },
        },
    },
    tree: {
        dropHere: 'Drop here to add to root level',
        nodeName: 'Node Name',
        nodeType: 'Node Type',
    },
    workspace: {
        new: 'New Workspace',
        rename: 'Rename',
        delete: 'Delete',
        noWorkspaces: 'No workspaces',
        defaultName: 'Default Workspace',
        untitledName: 'Untitled Workspace',
        defaultTreeTitle: "{{name}}'s Tree",
        switch: 'Switch Workspace',
        noWorkspace: 'No Workspace',
        createTitle: 'Create New Workspace',
        createDescription: 'Create a new workspace.',
        create: 'Create',
        namePlaceholder: 'Workspace name',
        renameTitle: 'Rename Workspace',
        renameDescription: 'Change the workspace name.',
        newNamePlaceholder: 'New workspace name',
        change: 'Change',
        deleteTitle: 'Delete Workspace',
        deleteDescription: 'Delete workspace "{{name}}". This action cannot be undone.',
        deleteWarning: 'When deleted, all data in this workspace will be lost.',
        defaultTreeName: 'New Tree',
        errors: {
            loadFailed: 'Failed to load workspace',
            saveFailed: 'Failed to save workspace',
            renameFailed: 'Failed to rename workspace',
            deleteFailed: 'Failed to delete workspace',
            switchFailed: 'Failed to switch workspace',
        },
        success: {
            renamed: 'Workspace renamed',
            deleted: 'Workspace deleted',
        },
    },
    toast: {
        workspaceCreated: 'Workspace "{{name}}" created',
        sampleChanged: 'Sample "{{name}}" loaded',
        dataReset: 'Data reset',
        exportComplete: 'Export complete',
        exportError: 'Export error',
        importError: 'Import error',
        importComplete: 'Import complete',
    },
    dialogs: {
        reset: {
            title: 'Confirm Reset',
            description: 'This will reset the current tree data to its initial state. Are you sure?',
        },
        import: {
            title: 'Import Tree Data',
            description: 'Import tree data in JSON format. Current data will be overwritten.',
            jsonData: 'JSON Data',
            placeholder: 'Paste JSON data here',
            errors: {
                noData: 'No data to import',
                invalidFormat: 'Invalid data format',
                parseError: 'Import failed. JSON format is incorrect.',
                fileReadError: 'Failed to read the file',
                noTreeData: 'Tree data not found',
                noNodeTypes: 'Node type data not found',
                invalidNodeStructure: 'Invalid node structure included',
                invalidNodeTypeStructure: 'Invalid node type structure included',
            },
        },
        nodeType: {
            title: 'Node Type Management',
            typeName: 'Type Name',
            typeNameRequired: 'Type Name *',
            icon: 'Icon',
            noIcon: 'No icon set',
            imageUrlTitle: 'Set image URL',
            uploadImageTitle: 'Upload image file',
            fields: 'Field Definitions',
            addField: 'Add Field',
            noFields: 'No fields. Please add some.',
            fieldName: 'Field Name',
            fieldNamePlaceholder: 'e.g., Position, Department, etc.',
            fieldType: 'Type',
            fieldTypeSelect: 'Select type',
            fieldTypes: {
                text: 'Single Line Text',
                textarea: 'Multi-line Text',
                link: 'Link',
                youtube: 'YouTube',
                image: 'Image',
                audio: 'Audio',
            },
            required: 'Required',
            typeNamePlaceholder: 'e.g., Employee, Project, Task, etc.',
            addNewType: 'Add New Type',
            typeList: 'Node Type List',
            noTypes: 'No node types. Please add a new type.',
            fieldsCount: '{{count}} fields',
            errors: {
                fileSizeLimit: 'File size must be less than 2MB',
                imageFileOnly: 'Please select an image file',
                fileReadError: 'Failed to read the file',
            },
        },
        url: {
            title: 'Enter Icon URL',
            imageUrl: 'Image URL',
            placeholder: 'https://example.com/icon.png',
            preview: 'Preview',
            enterValidUrl: 'Please enter a valid URL',
        },
        node: {
            create: {
                title: 'Add Node',
                childTitle: 'Add Child Node',
                rootTitle: 'Add Root Node',
                selectType: 'Select Node Type',
                requiredMark: 'Required',
                nodeName: 'Node Name',
                createButton: 'Create',
                typeNotDefined: 'No node types defined. Please create a node type first.',
                icon: {
                    label: 'Icon (optional)',
                    notSet: 'No icon set (node type icon will be used)',
                },
                fields: {
                    label: 'Fields',
                },
                validation: {
                    nodeNameRequired: 'Node name is required',
                    fieldRequired: 'is required',
                    validUrl: 'Please enter a valid URL',
                    validYouTube: 'Please enter a valid YouTube URL',
                },
            },
            detail: {
                title: 'Node Details',
                editTitle: 'Edit Node Details',
                typeLabel: 'Node Type',
                nameLabel: 'Node Name',
                nameRequired: 'Required',
                iconLabel: 'Icon (optional)',
                iconAlt: 'Icon',
                iconNotSet: 'No icon set (node type icon will be used)',
                customIconText: 'Custom icon',
                usingTypeIcon: 'Using node type icon',
                noIcon: 'No icon',
                customFields: 'Custom Fields',
                addField: 'Add Field',
                noCustomFields: 'No custom fields',
                validation: {
                    validUrl: 'Please enter a valid URL',
                },
                audio: {
                    uploadedFile: 'Uploaded audio file',
                    playbackError: 'Failed to play audio. Format may not be supported.',
                    loadError: 'Failed to load audio. Format may not be supported.',
                },
                saveButton: 'Save',
                editButton: 'Edit',
                closeButton: 'Close',
            },
        },
    },
    media: {
        audio: {
            uploadedFile: 'Uploaded audio file',
            fileTab: 'File',
            urlTab: 'URL',
            clickToSelect: 'Click to select audio file',
            dragAndDrop: 'Or drag & drop audio file here',
            formats: '(MP3, WAV, OGG, AAC)',
            urlPlaceholder: 'https://example.com/audio.mp3',
            set: 'Set',
            errors: {
                fileSizeLimit: 'File size must be less than 10MB',
                audioFileOnly: 'Please select an audio file',
                fileReadError: 'Failed to read the file',
                invalidUrl: 'Invalid audio URL',
                playbackError: 'Failed to play audio. Format may not be supported.',
                loadError: 'Failed to load audio. Format may not be supported.',
            },
        },
        image: {
            preview: 'Preview',
            fileTab: 'File',
            urlTab: 'URL',
            clickToSelect: 'Click to select image',
            dragAndDrop: 'Or drag & drop image here',
            urlPlaceholder: 'https://example.com/image.jpg',
            set: 'Set',
            errors: {
                fileSizeLimit: 'File size must be less than 5MB',
                imageFileOnly: 'Please select an image file',
                fileReadError: 'Failed to read the file',
            },
        },
    },
    debug: {
        fileReadError: 'Failed to read the file',
        exportError: 'An error occurred during export',
        importError: 'An error occurred during import',
    },
};
